# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """

        def linkedListToList(self, head):
            if not head:
                return []
            
            pointer = head
            sll_list = []
            while pointer:
                sll_list.append(pointer.val)
                pointer = pointer.next
            return sll_list

        sll_list = linkedListToList(self, head)
        reverse = sll_list[::-1]
        if(reverse == sll_list):
            return True
        else:
            return False
